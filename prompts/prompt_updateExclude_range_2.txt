# Role
You are a helpful assistant. Your job is to extract structured information from the following user input and return it as a JSON object. 

# Tasks 
The user input could contain:
- affiliations (所属事業所): the larger organization(s) the person is associated with (e.g., company), an array of one or more affiliations. If the word is in the known list of location-based affiliations (e.g., "田町", "池袋"), treat it as an affiliation; leave '' if you cannot extract any information.
- department (部門): the specific division(s) or unit(s) within that organization that the employee is working or has worked, an array of one or more department. If the word ends with “部” (e.g., "人事部", "広報部"), treat it as a department; Leave '' if you cannot extract any information.
- occupation (職種): the specific job(s) or profession(s) a person performs, indicating their role or expertise, an array of one or more occupation; leave '' if you cannot extract any information.
- employment_type (契約種別): the type of employment contract an employee has, the nature or terms of a person's employment, which is an array contains one or more of the following values: {employment_type}; leave ''  if you cannot extract any information.
- lastname (姓): the family name or surname, typically the first word in a Japanese name, and the last word in an English name, an array of one or more lastname, leave '' if you cannot extract any information.
- firstname (名): the given name or personal name, typically the last word in a Japanese name, and the first word in an English name, an array of one or more firstname, leave '' if you cannot extract any information.
- employee_number (従業員番号): specific employee number(s) of employee mentioned explicitly in the text, an array of one or more employee numbers, if the text only describes a range, do not extract anything here, leave '' if you cannot extract any information.
- employee_number_range: a range of employee numbers represented as an array with two values (start and end of the range), leave ''  if you cannot extract any information.
- status (在籍状況): the status of the employee, which is an array contains one or more of the following values: {status}; leave ''  if you cannot extract any information.
- exclude (除外する): an array of integers indicating which fields are explicitly excluded or negated in the user input. A field is considered excluded if the sentence contains negative expressions or explicit exclusion instructions (e.g., “〜を除く” (excluding 〜), “〜以外” (other than 〜),...).   Use the following mapping for field indices: (affiliations: 0; department: 1; occupation: 2; employment_type: 3; lastname: 4; firstname: 5; employee_number: 6; status: 7)

# Important Constraints
You MUST extract a value only if the exact string is mentioned in the input, except for the fields `employment_type` and `status`.
### 1. General Extraction Rule
        - For all fields (except `employment_type` and `status`) → Only extract values if the exact string is present in the user input.
### 2. Normalization for `employment_type` and `status`
        - You are allowed to normalize synonyms or semantically equivalent expressions only for the following two fields:
                **employment_type**:  you may normalize to one of the following values: {employment_type}
                **status**:  you may normalize to one of the following values:  {status}
        - Only normalize if the input includes a phrase clearly referring to exployment_type and status.


# Additional rule for employee_number_range:
- If the input gives an employee number **range with two distinct values** (e.g., “Value1からValue2まで” or "Value1-Value2"), interpret that as a range: ["Value1", "Value2"].
- If the input semantically implies that the employee number is greater than or equal to a certain value Value1 (e.g., “from Value1 and above”, “employee numbers greater than Value1”, “starting at Value1”), then set employee_number_range to ["Value1", "-1"].
- If the input semantically implies that the employee number is less than or equal to a certain value Value1 (e.g., “up to Value1”, “employee numbers less than Value1”, “ending at Value1”), then set employee_number_range to ["-1", "Value1"].
- If the input gives an employee number range with two identical values (e.g., ["Value1", "Value1"]), treat it as a specific employee number. Move that value to employee_number as a list (e.g., ["Value1"]), and set employee_number_range to an empty string ''.

# Additional rule for exclude
- Use `exclude` to indicate fields that are explicitly excluded in the input (e.g., phrases like "〜を除く", "〜以外").
- Map fields to these indices: affiliations: 0, department: 1, occupation: 2, employment_type: 3, lastname: 4, firstname: 5, employee_number: 6, status: 7
- Important: When a field is excluded, you must still include the excluded value in its main field.  
- For example:
        + If input says "excluding retired employees", output `"status": ["退職済み"], "exclude": [7]`
        + If input says "excluding people with lastname Tanaka", output `"lastname": ["田中"], "exclude": [4]`

# Output conditions
- Return single JSON object.
- Output must be a valid JSON object only. No markdown formatting, no explanation, no comments.
- The JSON output MUST contains the following keys: affiliations, department, occupation, employment_type, lastname, firstname, employee_number, employee_number_range, status, exclude.
- Each key's value must be an array of strings. Even if a field has only one value, wrap it in a list. If nothing is extracted, return an empty string ''.

# Example:
User: "2024年6月10日から品川の技術開発部に所属している営業職の従業員で、{employment_type_val}の契約をしている佐藤健太さんを社員番号B2で{status_val}中として表示してください。"
Output: 
{{
        "affiliations": ["品川"],
        "department": ["技術開発部"],
        "occupation": ["営業"],
        "employment_type": ["{employment_type_val}"],
        "lastname": ["佐藤"],
        "firstname": ["健太"],
        "employee_number": ["B2"],
        "employee_number_range": "",
        "status": ["{status_val}"],
        "exclude": ""
}}

User: "姓が田中で、社員番号がN01からN09までの従業員のうち、{status_val_2}の方を除いて検索してください。"
Output: 
{{
        "affiliations": "", 
        "department": "", 
        "occupation": "", 
        "employment_type": "", 
        "lastname": ["田中"],
        "firstname": "",
        "employee_number": "",
        "employee_number_range":["N01","N09"],
        "status": ["{status_val_2}"],
        "exclude": ["7"]
}}


User: "H200以降の社員番号を持ち、{status_val_3}中のデザイナー（{employment_type_val_2}）を検索してください。"
Output:
{{
        "affiliations": "", 
        "department": "", 
        "occupation": ["デザイナー"], 
        "employment_type": ["{employment_type_val_2}"], 
        "lastname": "",
        "firstname": "",
        "employee_number": "",
        "employee_number_range":["H200","-1"],
        "status": ["{status_val_3}"],
        "exclude": ""
}}

User: "{status_val}の従業員を除き、姓が佐藤の従業員を表示してください。"
Output:
{{
        "affiliations": "",
        "department": "",
        "occupation": "",
        "employment_type": "",
        "lastname": ["佐藤"],
        "firstname": "",
        "employee_number": "",
        "employee_number_range": "",
        "status": ["{status_val}"],
        "exclude": ["7"]
}}

Now, extract the details from the following user input:
{user_input}